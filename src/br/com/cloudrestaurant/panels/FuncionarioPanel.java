/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.com.cloudrestaurant.panels;

import CloudRestaurant.Conexao;
import br.com.cloudrestaurant.classes.Cargos;
import br.com.cloudrestaurant.classes.Estados;
import br.com.cloudrestaurant.classes.Funcionario;
import br.com.cloudrestaurant.classes.Telefones;
import br.com.cloudrestaurant.classes.TipoPagamento;
import br.com.cloudrestaurant.constante.Constantes;
import br.com.cloudrestaurant.utilidades.Metodos;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Debug
 */
public class FuncionarioPanel extends javax.swing.JPanel {
    Funcionario funcionario;
    Estados estado;
    Conexao con;
    Constantes constante;
    MaskFormatter maskTextDataAdm;
    Metodos metodo;
    Telefones telefone;

    int selecao = 1;
    int codEstado = 18; // Rio de Janeiro

    /**
     * Creates new form EntregadorPanel
     */
    public FuncionarioPanel() {
        funcionario = new Funcionario();
        initComponents();
        preencheEstados();
        preencheLabels();
        ocultaLabels();
        preencheTabelaFuncionario(funcionario.consultaFuncionarioCargo());
        bloqueiaBotoes();
        preencheDatas();
        ocultaCombo();
        preencheComboTipoPagamento();
        preencheComboCargo();
        insereNovoCodFuncionario();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotao = new javax.swing.ButtonGroup();
        panelPrincipal = new javax.swing.JPanel();
        panelBotoes = new javax.swing.JPanel();
        btIncluir = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        labelBusca = new javax.swing.JLabel();
        textBusca = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionario = new javax.swing.JTable();
        labelMensagem = new javax.swing.JLabel();
        radioNome = new javax.swing.JRadioButton();
        radioCargo = new javax.swing.JRadioButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabPessoal = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        labelDataNascimento = new javax.swing.JLabel();
        textDataNascimento = new javax.swing.JTextField();
        textDataAlteracao = new javax.swing.JTextField();
        labelDataAlteracao = new javax.swing.JLabel();
        labelEndereco = new javax.swing.JLabel();
        textEndereco = new javax.swing.JTextField();
        textNumero = new javax.swing.JTextField();
        labelNumero = new javax.swing.JLabel();
        labelComplemento = new javax.swing.JLabel();
        textComplemento = new javax.swing.JTextField();
        labelBairro = new javax.swing.JLabel();
        textBairro = new javax.swing.JTextField();
        comboEstados = new javax.swing.JComboBox();
        btEstados = new javax.swing.JButton();
        textEstado = new javax.swing.JTextField();
        labelEstado = new javax.swing.JLabel();
        textCidade = new javax.swing.JTextField();
        labelCidade = new javax.swing.JLabel();
        labelTelefone = new javax.swing.JLabel();
        textTelefone = new javax.swing.JTextField();
        btIncluiTelefone = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaTelefones = new javax.swing.JTable();
        btExcluiTelefone = new javax.swing.JButton();
        tabProfissional = new javax.swing.JPanel();
        labelDataAdm = new javax.swing.JLabel();
        textDataAdm = new javax.swing.JFormattedTextField();
        labelDataSaida = new javax.swing.JLabel();
        textDataSaida = new javax.swing.JTextField();
        textIdFuncionario = new javax.swing.JTextField();
        labelCargo = new javax.swing.JLabel();
        textCargo = new javax.swing.JTextField();
        btVerCargo = new javax.swing.JButton();
        comboCargo = new javax.swing.JComboBox();
        textDataHoje = new javax.swing.JTextField();
        labelEntrada = new javax.swing.JLabel();
        textHorarioEntrada = new javax.swing.JTextField();
        labelSaida = new javax.swing.JLabel();
        textHorarioSaida = new javax.swing.JTextField();
        labelValorPagamento = new javax.swing.JLabel();
        textValorPagamento = new javax.swing.JTextField();
        labelTipoPagamento = new javax.swing.JLabel();
        textTipoPagamento = new javax.swing.JTextField();
        btVerTipoPagamento = new javax.swing.JButton();
        comboTipoPagamento = new javax.swing.JComboBox();
        labelObservacoes = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textObservacoes = new javax.swing.JTextArea();
        labelTitCodFuncionario = new javax.swing.JLabel();
        labelCodFuncionario = new javax.swing.JLabel();

        panelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        panelBotoes.setBackground(new java.awt.Color(153, 153, 255));
        panelBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/cloudrestaurant/images/btAdicionar.png"))); // NOI18N
        btIncluir.setText("Incluir");
        btIncluir.setToolTipText("Incluir Funcionário");
        btIncluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btIncluir.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btIncluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirActionPerformed(evt);
            }
        });

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/cloudrestaurant/images/btSalvar.png"))); // NOI18N
        btAlterar.setText("Salvar");
        btAlterar.setToolTipText("Salvar");
        btAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/cloudrestaurant/images/btExcluir.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.setToolTipText("Excluir");
        btExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/cloudrestaurant/images/btSairCloud.png"))); // NOI18N
        btFechar.setText("Sair");
        btFechar.setToolTipText("Sair da tela");
        btFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btFechar.setMaximumSize(new java.awt.Dimension(55, 35));
        btFechar.setMinimumSize(new java.awt.Dimension(55, 35));
        btFechar.setPreferredSize(new java.awt.Dimension(55, 35));
        btFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        btCancelar.setBackground(new java.awt.Color(153, 153, 255));
        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/cloudrestaurant/images/btCancelarCloud.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.setToolTipText("Cancelar as Operações");
        btCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCancelar.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btCancelar.setMaximumSize(new java.awt.Dimension(55, 35));
        btCancelar.setMinimumSize(new java.awt.Dimension(55, 35));
        btCancelar.setPreferredSize(new java.awt.Dimension(55, 35));
        btCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotoesLayout = new javax.swing.GroupLayout(panelBotoes);
        panelBotoes.setLayout(panelBotoesLayout);
        panelBotoesLayout.setHorizontalGroup(
            panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBotoesLayout.setVerticalGroup(
            panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        labelBusca.setText("jLabel1");

        textBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBuscaActionPerformed(evt);
            }
        });

        tabelaFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaFuncionarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaFuncionario);

        labelMensagem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelMensagem.setForeground(new java.awt.Color(255, 0, 0));
        labelMensagem.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelMensagem.setText("jLabel1");

        grupoBotao.add(radioNome);
        radioNome.setSelected(true);
        radioNome.setText("jRadioButton1");
        radioNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNomeActionPerformed(evt);
            }
        });

        grupoBotao.add(radioCargo);
        radioCargo.setText("jRadioButton2");
        radioCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCargoActionPerformed(evt);
            }
        });

        labelNome.setText("Nome do Funcionário: ");

        labelDataNascimento.setText("Data de Nascimento:");

        textDataNascimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textDataNascimentoKeyTyped(evt);
            }
        });

        labelDataAlteracao.setText("Data de Alteração:");

        labelEndereco.setText("Endereço:");

        textEndereco.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        textNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNumeroKeyTyped(evt);
            }
        });

        labelNumero.setText("Número:");

        labelComplemento.setText("Complemento:");

        labelBairro.setText("Bairro:");

        comboEstados.setPreferredSize(new java.awt.Dimension(6, 20));
        comboEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEstadosActionPerformed(evt);
            }
        });

        btEstados.setText("...");
        btEstados.setToolTipText("Busca Dia da Semana");
        btEstados.setPreferredSize(new java.awt.Dimension(59, 20));
        btEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEstadosActionPerformed(evt);
            }
        });

        labelEstado.setText("Estado:");

        labelCidade.setText("Cidade:");

        labelTelefone.setText("Telefones:");

        textTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textTelefoneKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textTelefoneKeyTyped(evt);
            }
        });

        btIncluiTelefone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/cloudrestaurant/images/mais.gif"))); // NOI18N
        btIncluiTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluiTelefoneActionPerformed(evt);
            }
        });

        tabelaTelefones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Telefones"
            }
        ));
        jScrollPane2.setViewportView(tabelaTelefones);

        btExcluiTelefone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/cloudrestaurant/images/menos_1.png"))); // NOI18N
        btExcluiTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluiTelefoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabPessoalLayout = new javax.swing.GroupLayout(tabPessoal);
        tabPessoal.setLayout(tabPessoalLayout);
        tabPessoalLayout.setHorizontalGroup(
            tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPessoalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCidade)
                    .addGroup(tabPessoalLayout.createSequentialGroup()
                        .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEndereco)
                            .addComponent(labelNome))
                        .addGap(18, 18, 18)
                        .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabPessoalLayout.createSequentialGroup()
                                .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textNome, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                    .addComponent(textEndereco)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabPessoalLayout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(labelComplemento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(textComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(36, 36, 36)
                                .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelDataAlteracao)
                                    .addComponent(labelDataNascimento)
                                    .addComponent(labelBairro))
                                .addGap(18, 18, 18)
                                .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(textDataNascimento)
                                        .addComponent(textDataAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(tabPessoalLayout.createSequentialGroup()
                                .addComponent(textCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(labelEstado)
                                .addGap(18, 18, 18)
                                .addComponent(textEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabPessoalLayout.createSequentialGroup()
                                .addComponent(textTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btIncluiTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btExcluiTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(labelNumero)
                    .addComponent(labelTelefone))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        tabPessoalLayout.setVerticalGroup(
            tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabPessoalLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabPessoalLayout.createSequentialGroup()
                        .addComponent(labelNome)
                        .addGap(18, 18, 18)
                        .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelEndereco)
                            .addComponent(textEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDataAlteracao)
                            .addComponent(textDataAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNumero)
                            .addComponent(textNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelComplemento)
                            .addComponent(textComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelBairro)
                            .addComponent(textBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelDataNascimento)
                        .addComponent(textDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEstado)
                    .addComponent(textEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCidade))
                .addGap(12, 12, 12)
                .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelTelefone)
                        .addComponent(textTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btIncluiTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btExcluiTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("     Dados Pessoais     ", tabPessoal);

        labelDataAdm.setText("Data de Admissão:");

        textDataAdm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textDataAdmKeyTyped(evt);
            }
        });

        labelDataSaida.setText("Data de Saída:");

        textDataSaida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textDataSaidaKeyTyped(evt);
            }
        });

        labelCargo.setText("Cargo:");

        btVerCargo.setText("...");
        btVerCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerCargoActionPerformed(evt);
            }
        });

        comboCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCargoActionPerformed(evt);
            }
        });

        labelEntrada.setText("Horário de Entrada:");

        textHorarioEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textHorarioEntradaKeyTyped(evt);
            }
        });

        labelSaida.setText("Horário de Saída:");

        textHorarioSaida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textHorarioSaidaKeyTyped(evt);
            }
        });

        labelValorPagamento.setText("Valor Pagamento:");

        labelTipoPagamento.setText("Tipo:");

        btVerTipoPagamento.setText("...");
        btVerTipoPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerTipoPagamentoActionPerformed(evt);
            }
        });

        comboTipoPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoPagamentoActionPerformed(evt);
            }
        });

        labelObservacoes.setText("Observações:");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        textObservacoes.setColumns(20);
        textObservacoes.setRows(5);
        jScrollPane3.setViewportView(textObservacoes);

        javax.swing.GroupLayout tabProfissionalLayout = new javax.swing.GroupLayout(tabProfissional);
        tabProfissional.setLayout(tabProfissionalLayout);
        tabProfissionalLayout.setHorizontalGroup(
            tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabProfissionalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabProfissionalLayout.createSequentialGroup()
                        .addComponent(labelCargo)
                        .addGap(92, 92, 92)
                        .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabProfissionalLayout.createSequentialGroup()
                                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textDataAdm)
                                    .addComponent(textHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textValorPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabProfissionalLayout.createSequentialGroup()
                                        .addComponent(labelSaida)
                                        .addGap(18, 18, 18)
                                        .addComponent(textHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tabProfissionalLayout.createSequentialGroup()
                                        .addComponent(labelDataSaida)
                                        .addGap(37, 37, 37)
                                        .addComponent(textDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(tabProfissionalLayout.createSequentialGroup()
                                .addComponent(textCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btVerCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabProfissionalLayout.createSequentialGroup()
                                        .addGap(158, 158, 158)
                                        .addComponent(textIdFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tabProfissionalLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(textDataHoje, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(tabProfissionalLayout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(labelTipoPagamento)
                                .addGap(18, 18, 18)
                                .addComponent(textTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btVerTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(labelDataAdm)
                    .addComponent(labelEntrada)
                    .addComponent(labelValorPagamento)
                    .addGroup(tabProfissionalLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelObservacoes))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        tabProfissionalLayout.setVerticalGroup(
            tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabProfissionalLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDataAdm)
                    .addComponent(labelDataSaida)
                    .addComponent(textDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDataAdm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textIdFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDataHoje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCargo)
                    .addComponent(textCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btVerCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEntrada)
                    .addComponent(labelSaida)
                    .addComponent(textHorarioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textHorarioSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelValorPagamento)
                    .addComponent(labelTipoPagamento)
                    .addComponent(textValorPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btVerTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelObservacoes)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("   Dados Profissionais   ", tabProfissional);

        labelTitCodFuncionario.setText("Código do Funcionário: ");

        labelCodFuncionario.setText("sem código.");

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(labelBusca)
                        .addGap(18, 18, 18)
                        .addComponent(textBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(radioNome)
                        .addGap(18, 18, 18)
                        .addComponent(radioCargo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(labelTitCodFuncionario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelCodFuncionario)
                        .addGap(116, 116, 116)
                        .addComponent(labelMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelBotoes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelBusca)
                            .addComponent(textBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioNome)
                            .addComponent(radioCargo))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMensagem)
                            .addComponent(labelTitCodFuncionario)
                            .addComponent(labelCodFuncionario))
                        .addGap(7, 7, 7)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void ocultaCombo(){
        btEstados.setVisible(false);
        textIdFuncionario.setVisible(false);
        textDataHoje.setVisible(false);
    }
    
    public Boolean verificaCamposProfissional(){
        if(textDataAdm.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo Data de Admissão encontra-se vazio.", "ERRO DE CADASTRO", Constantes.ERROR);
            textDataAdm.requestFocus();
            return false;
        }else if(textCargo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo Cargo encontra-se vazio.", "ERRO DE CADASTRO", Constantes.ERROR);
            textCargo.requestFocus();
            return false;
        }else if(textHorarioEntrada.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo Horário de Entrada encontra-se vazio.", "ERRO DE CADASTRO", Constantes.ERROR);
            textHorarioEntrada.requestFocus();
            return false;
        }else if(textHorarioSaida.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo Horário de Saída encontra-se vazio.", "ERRO DE CADASTRO", Constantes.ERROR);
            textHorarioSaida.requestFocus();
            return false;
        }else{
            return true;
        }
    }
    
    
    private void btIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirActionPerformed

            funcionario = new Funcionario();
            estado = new Estados();
            
            if(verificaCamposProfissional()){
            
            metodo = new Metodos();
            
            String horaEntrada = metodo.alteraFormatoHoraPadrao(textHorarioEntrada.getText() + ":00");
            String horaSaida = metodo.alteraFormatoHoraPadrao(textHorarioSaida.getText() + ":00");
          
            funcionario.setHoraEntrada(Time.valueOf(horaEntrada));
            funcionario.setHoraSaida(Time.valueOf(horaSaida));

            String dataAdm = metodo.alteraFormatoDataPadrao(textDataAdm.getText());
            String dataSaida = metodo.alteraFormatoDataPadrao(textDataSaida.getText());
            String dataNascimento = metodo.alteraFormatoDataPadrao(textDataNascimento.getText());
         
        try {
            Double valorPagamento = NumberFormat.getInstance().parse(textValorPagamento.getText()).doubleValue();
            
            funcionario.setValorPagamento(valorPagamento);
            
        } catch (ParseException ex) {
            Logger.getLogger(ItensPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
            //String valorSemPonto = textEndereco.getText().replaceAll(",", ".");
            
        funcionario.setIdFuncionario(Integer.parseInt(labelCodFuncionario.getText()));
        funcionario.setCodFuncionario(Integer.parseInt(labelCodFuncionario.getText()));
        JOptionPane.showMessageDialog(null, funcionario.getCodFuncionario());
            funcionario.setNome(textNome.getText());
            funcionario.setEndereco(textEndereco.getText());
            if (textNumero.getText().equals("")){
                funcionario.setNumero(0);
            }else{
                funcionario.setNumero(Integer.valueOf(textNumero.getText()));
            }
            funcionario.setComplemento(textComplemento.getText());
            funcionario.setBairro(textBairro.getText());
            funcionario.setCidade(textCidade.getText());
            funcionario.setCodEstado(codEstado);
            funcionario.setDataNascimento(Date.valueOf(dataNascimento));
            funcionario.setDataAdmissao(Date.valueOf(dataAdm));
            
            if (dataSaida.equals("")){
                String dataSaidaNulo = dataAdm;
                funcionario.setDataSaida(Date.valueOf(dataSaidaNulo));
            }else{
                funcionario.setDataSaida(Date.valueOf(dataSaida));
            }
            
            funcionario.setDataCadastro(Date.valueOf(textDataHoje.getText()));
            funcionario.setDataAlteracao(Date.valueOf(textDataHoje.getText()));

            
            Cargos cargo = new Cargos();
            
            funcionario.setCodCargo(cargo.consultaCargoNome(textCargo.getText()));
            
            TipoPagamento tipoPagamento = new TipoPagamento();
            
            funcionario.setCodTipoPagamento(tipoPagamento.buscaIdTipoPagamento(textTipoPagamento.getText()));
            funcionario.setObservacoes(textObservacoes.getText());
            
            funcionario.cadastraFuncionario();
            
//            int idFuncionario = Integer.parseInt(textIdFuncionario.getText());
            int idFuncionario = funcionario.buscaIdFuncionario(labelCodFuncionario.getText());
            
            if (tabelaTelefones.getRowCount() > 0){
            
                Telefones telefone = new Telefones();


                for (int i = 0; i < tabelaTelefones.getRowCount(); i ++){
                    String telefones = String.valueOf(tabelaTelefones.getValueAt(i, 0));

                    telefone.setTelefone(telefones);
                    telefone.setTipoProprietario("funcionario");
                    telefone.setCodProprietario(idFuncionario);

                    telefone.cadastraTelefones();

                }
            }
            
            limpaCampos();
            preencheTabelaFuncionario(funcionario.consultaFuncionarioCargo());
            insereNovoCodFuncionario();
        }
    }//GEN-LAST:event_btIncluirActionPerformed
    
    public void insereNovoCodFuncionario(){
        funcionario = new Funcionario();
        int novoCodigo = funcionario.pesquisaUltimoCodFuncionario();
        labelCodFuncionario.setText(String.valueOf(novoCodigo));
    }
    
    public void ocultaLabels(){
        labelMensagem.setVisible(false);
    }
    
    public void bloqueiaBotoes(){
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
    }
    
    public void preencheLabels(){
    
        radioNome.setText("Por nome");
        radioCargo.setText("Por Cargo");
        labelBusca.setText("Busca: ");
        labelBairro.setText("Bairro: ");
        labelCidade.setText("Cidade: ");
        labelComplemento.setText("Complemento: ");
        labelDataNascimento.setText("Data de Nascimento: ");
        labelDataAdm.setText("Data de Admissão: ");
        labelDataAlteracao.setText("Última Alteração: ");
        labelDataSaida.setText("Data Saída: ");
        labelEndereco.setText("Endereço: ");
        labelEstado.setText("Estado: ");
        labelNome.setText("Nome: ");
        labelNumero.setText("Número: ");
        textEstado.setText("RJ");
        textEstado.setEnabled(false);
        btEstados.setEnabled(false);
        textCidade.setEnabled(false);
        textCidade.setText("Rio de Janeiro");
        textNome.requestFocus();
        
    }
    
    
    public void preencheEstados(){
        estado = new Estados();
        try{
            String sql = estado.consultaComboEstado();
        
            con = new Conexao();
            Connection conn = con.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while(rs.next()){
                String dado = rs.getString("sigla");
                comboEstados.addItem(dado);
            }
        }catch(IOException | SQLException ex){
            comboEstados.addItem("Não foi localizado algum estado.");
            JOptionPane.showMessageDialog(null, "Problemas. Erro: " + ex.getMessage());
        }        
        
    }
    
    public void limpaCampos(){
        textNome.setText("");
        textEndereco.setText("");
        textNumero.setText("");
        textComplemento.setText("");
        textBairro.setText("");
        textDataAdm.setText("");
        textDataSaida.setText("");
        textDataNascimento.setText("");
        textCargo.setText("");
        textHorarioEntrada.setText("");
        textHorarioSaida.setText("");
        textValorPagamento.setText("");
        textTipoPagamento.setText("");
        textObservacoes.setText("");
        labelCodFuncionario.setText("");
        
//        JOptionPane.showMessageDialog(null, tabelaTelefones.getRowCount());
        
        Telefones telefone = new Telefones();
        
        do{
            for (int i = 0; i < tabelaTelefones.getRowCount(); i++){
                telefone.retiraTelefoneTabela(tabelaTelefones, i);
            }
        }while(tabelaTelefones.getRowCount() != 0);
        
//        for (int i = 0; i < tabelaTelefones.getRowCount(); i++){
//            telefone.retiraTelefoneTabela(tabelaTelefones, i);
//        }
        
        textNome.requestFocus();
    }
    
    public void preencheTabelaFuncionario(String sql){
        ArrayList dados = new ArrayList();
        String[] nomeColunas = new String[]{"CÓDIGO","NOME","CARGO","ENTRADA","SAIDA"};
//        Metodos metodo = new Metodos();
//        metodo.salvarTexto(sql);
        try{
            con = new Conexao();
            Connection conn = con.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            rs.first();
            
            if(rs.absolute(1)){
            
            do{
                dados.add(new Object[]{rs.getString("idFuncionario"), rs.getString("f.nome"), rs.getString("c.nomeCargo"), rs.getString("horaEntradaFormatada"), rs.getString("horaSaidaFormatada")});
            }while(rs.next());
            
            }
            else{
                labelMensagem.setVisible(true);
                labelMensagem.setText("Não contém informações armazenadas.");
            }
            
        ModeloTabela modelo = new ModeloTabela(dados, nomeColunas);
        tabelaFuncionario.setModel(modelo);
        tabelaFuncionario.getColumnModel().getColumn(0).setPreferredWidth(130); // define o tamanho da coluna.
        tabelaFuncionario.getColumnModel().getColumn(0).setResizable(false);// Não poderá alterar o tamanho.
        tabelaFuncionario.getColumnModel().getColumn(1).setPreferredWidth(150); // define o tamanho da coluna.
        tabelaFuncionario.getColumnModel().getColumn(1).setResizable(false);// Não poderá alterar o tamanho.
        tabelaFuncionario.getColumnModel().getColumn(2).setPreferredWidth(100); // define o tamanho da coluna.
        tabelaFuncionario.getColumnModel().getColumn(2).setResizable(false);// Não poderá alterar o tamanho.
        tabelaFuncionario.getColumnModel().getColumn(3).setPreferredWidth(100); // define o tamanho da coluna.
        tabelaFuncionario.getColumnModel().getColumn(3).setResizable(false);// Não poderá alterar o tamanho.
        
        tabelaFuncionario.getTableHeader().setReorderingAllowed(false);
        tabelaFuncionario.setAutoResizeMode(tabelaFuncionario.AUTO_RESIZE_OFF);
        
        tabelaFuncionario.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            
        }catch(IOException | SQLException ex){
            JOptionPane.showMessageDialog(null, "Problemas. Erro: " + ex.getMessage());
            labelMensagem.setVisible(true);
//            labelMensagem.setText("Não há registro na tabela. Inclua um novo.");
        }
        
        
    }
    
    public Boolean verificaCampos(){
        
        if (textNome.getText().equals("")){
            labelMensagem.setVisible(true);
            labelMensagem.setText("Nome inválido!");
            textNome.requestFocus();
            return false;
        }else if(textEndereco.getText().equals("")){
            labelMensagem.setVisible(true);
            labelMensagem.setText("Endereço inválido!");
            textEndereco.requestFocus();
            return false;
        }else if (textNumero.getText().equals("")){
            labelMensagem.setVisible(true);
            labelMensagem.setText("Número inválido!");
            textNumero.requestFocus();
            return false;
        }else if (textBairro.getText().equals("")){
            labelMensagem.setVisible(true);
            labelMensagem.setText("Bairro inválido!");
            textNumero.requestFocus();
            return false;
        }else if (textCidade.getText().equals("")){
            labelMensagem.setVisible(true);
            labelMensagem.setText("Cidade inválido!");
            textCidade.requestFocus();
            return false;
        }else if (textEstado.getText().equals("")){
            labelMensagem.setVisible(true);
            labelMensagem.setText("Estado inválido!");
            textEstado.requestFocus();
            return false;
        }else{
            return true;
        }
        
    }
    
    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        if (verificaCampos()){

            metodo = new Metodos();
            
            String dataNasc = metodo.alteraFormatoDataPadrao(textDataNascimento.getText());
            String dataAdm = metodo.alteraFormatoDataPadrao(textDataAdm.getText());
            String dataSaida = metodo.alteraFormatoDataPadrao(textDataSaida.getText());

            funcionario = new Funcionario();
            estado = new Estados();
            
            try {
                Double valorPagamento = NumberFormat.getInstance().parse(textValorPagamento.getText()).doubleValue();

                funcionario.setValorPagamento(valorPagamento);

            } catch (ParseException ex) {
                Logger.getLogger(ItensPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            funcionario.setIdFuncionario(Integer.parseInt(textIdFuncionario.getText()));
            funcionario.setCodFuncionario(Integer.parseInt(labelCodFuncionario.getText()));
            funcionario.setNome(textNome.getText());
            funcionario.setEndereco(textEndereco.getText());
            funcionario.setNumero(Integer.valueOf(textNumero.getText()));
            funcionario.setComplemento(textComplemento.getText());
            funcionario.setBairro(textBairro.getText());
            funcionario.setCidade(textCidade.getText());
            funcionario.setCodEstado(codEstado);
            funcionario.setDataNascimento(Date.valueOf(dataNasc));
            funcionario.setDataAdmissao(Date.valueOf(dataAdm));
            
            if (dataSaida.equals("")){
                String dataSaidaNulo = dataAdm;
                funcionario.setDataSaida(Date.valueOf(dataSaidaNulo));
            }else{
                funcionario.setDataSaida(Date.valueOf(dataSaida));
            }
            funcionario.setDataAlteracao(Date.valueOf(textDataHoje.getText()));
            
            String horaEntrada = metodo.alteraFormatoHoraPadrao(textHorarioEntrada.getText() + ":00");
            String horaSaida = metodo.alteraFormatoHoraPadrao(textHorarioSaida.getText() + ":00");
            funcionario.setHoraEntrada(Time.valueOf(horaEntrada));
            funcionario.setHoraSaida(Time.valueOf(horaSaida));
            
            TipoPagamento tipoPagamento = new TipoPagamento();
            Cargos cargo = new Cargos();
            
            funcionario.setCodTipoPagamento(tipoPagamento.buscaIdTipoPagamento(textTipoPagamento.getText()));
            funcionario.setCodCargo(cargo.consultaCargoNome(textCargo.getText()));
//            funcionario.setValorPagamento(Double.parseDouble(textValorPagamento.getText()));
            funcionario.setObservacoes(textObservacoes.getText());
            
            int codFuncionario = funcionario.getIdFuncionario();
            
            funcionario.alteraFuncionario();
            
            Telefones telefone = new Telefones();
            
            telefone.excluiAlteraTelefone("funcionario", codFuncionario);
            
            for (int i = 0; i < tabelaTelefones.getRowCount(); i ++){
                String telefones = String.valueOf(tabelaTelefones.getValueAt(i, 0));

                telefone.setTelefone(telefones);
                telefone.setTipoProprietario("funcionario");
                telefone.setCodProprietario(codFuncionario);

                telefone.cadastraTelefones();

            }
            
            limpaCampos();
            preencheTabelaFuncionario(funcionario.consultaFuncionarioCargo());

        }

    }//GEN-LAST:event_btAlterarActionPerformed

    public int verificaTipoTrabalho(String tipoTrabalho){
              constante = new Constantes(); 
        try{
            String sql = "SELECT * FROM tipotrabalho WHERE nome = '" + tipoTrabalho + "'";
        
            con = new Conexao();
            Connection conn = con.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            
            if (rs.absolute(1)){
            
            int idTipoTrabalho = rs.getInt("idTipoTrabalho");
            return idTipoTrabalho;
            
            }else{
                JOptionPane.showMessageDialog(null, "Necessita cadastrar um novo tipo de trabalho.", "ATENÇÃO", constante.INTERROGACAO);
                return 0;
            }
        }catch(IOException | SQLException ex){
            JOptionPane.showMessageDialog(null, "Problemas. Erro: " + ex);
            return 0;
        }
    }
    
    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed

        funcionario = new Funcionario();

        funcionario.setIdFuncionario(Integer.parseInt(textIdFuncionario.getText()));
        funcionario.excluiFuncionario();
        limpaCampos();

        preencheTabelaFuncionario(funcionario.consultaFuncionarioCargo());

        // TODO add your handling code here:
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        this.fechar();
    }//GEN-LAST:event_btFecharActionPerformed

    public void fechar(){
        this.setVisible(false);
    }
    
    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed

        textBusca.setText("");
        limpaCampos();
        btIncluir.setEnabled(true);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        textNome.requestFocus();
        insereNovoCodFuncionario();
        preencheTabelaFuncionario(funcionario.consultaFuncionarioCargo());
        // TODO add your handling code here:
    }//GEN-LAST:event_btCancelarActionPerformed

    private void textBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBuscaActionPerformed
        funcionario = new Funcionario();
        if (textBusca.getText().equals("")){
            preencheTabelaFuncionario(funcionario.consultaFuncionario());
        }else{
            if (selecao == 1){ // pesquisa por nome
                preencheTabelaFuncionario(funcionario.consultaFuncionarioCargo() + " WHERE f.nome LIKE '%" + textBusca.getText() + "%' ORDER BY f.nome");
            }else if (selecao == 2){ // pesquisa por cargo
                preencheTabelaFuncionario(funcionario.consultaFuncionarioCargo() + " WHERE c.nomeCargo LIKE '%" + textBusca.getText() + "%' ORDER BY f.nome");

            }else if (selecao == 3){ // pesquisa por salário
                preencheTabelaFuncionario(funcionario.consultaFuncionarioCargo() + " "
                    + " WHERE f.valorPagamento LIKE '%" + textBusca.getText() + "%'");
            }
        }
    }//GEN-LAST:event_textBuscaActionPerformed

    private void tabelaFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaFuncionarioMouseClicked
        int linhaSelecionada = tabelaFuncionario.getSelectedRow();

        this.btIncluir.setEnabled(false);
        this.btAlterar.setEnabled(true);
        this.btExcluir.setEnabled(true);

        //        textIdIndicador.setText(tabelaIndicador.getValueAt(linhaSelecionada, 0).toString());
        //        textNome.setText(tabelaIndicador.getValueAt(linhaSelecionada, 1).toString());

        resultadoBuscaFuncionario(tabelaFuncionario.getValueAt(linhaSelecionada, 0).toString());
    }//GEN-LAST:event_tabelaFuncionarioMouseClicked

    public void resultadoBuscaFuncionario(String dados){
        metodo = new Metodos();
        funcionario = new Funcionario();
        telefone = new Telefones();
        metodo.limpaTabela(tabelaTelefones);
        try{
            String sql = funcionario.buscaFuncionario(dados);
            con = new Conexao();
            Connection conn = con.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            
            textIdFuncionario.setText(String.valueOf(rs.getInt("f.idFuncionario")));
            textNome.setText(rs.getString("f.nome"));
            textEndereco.setText(rs.getString("f.endereco"));
            textNumero.setText(rs.getString("f.numero"));
            textComplemento.setText(rs.getString("f.complemento"));
            textBairro.setText(rs.getString("f.bairro"));
            textCidade.setText(rs.getString("f.cidade"));
            textEstado.setText(rs.getString("es.sigla"));
            textDataAdm.setText(rs.getString("dataAdmFormat"));
            
            if (rs.getString("dataAdmFormat").equals(rs.getString("dataSaidaFormat"))){
                textDataSaida.setText("");
            }else{
                textDataSaida.setText(rs.getString("dataSaidaFormat"));
            }
            
            textDataNascimento.setText(rs.getString("dataNascFormat"));
            textDataAlteracao.setText(rs.getString("dataAlterFormat"));
            textCargo.setText(rs.getString("c.nomeCargo"));
            textHorarioEntrada.setText(rs.getString("horaEntradaFormatada"));
            textHorarioSaida.setText(rs.getString("horaSaidaFormatada"));
            textValorPagamento.setText(rs.getString("valorPagamento"));
            textTipoPagamento.setText(rs.getString("t.nomePagamento"));
            textObservacoes.setText(rs.getString("f.observacoes"));
            labelCodFuncionario.setText(rs.getString("idFuncionario"));
            
            telefone = new Telefones();
            
            telefone.buscaProprietarioTelefone(rs.getInt("f.codFuncionario"), "funcionario", tabelaTelefones);
            
        }catch(IOException | SQLException ex){
            labelMensagem.setVisible(true);
            JOptionPane.showMessageDialog(null, "Problemas na consulta. Erro: " + ex.getMessage());
        }
        
    }
    
    public String consultaEstado(int idEstado){
        try{
            String sqlEstado = "SELECT * FROM estado WHERE idEstado = " + idEstado;
            con = new Conexao();
            Connection conn = con.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sqlEstado);
            rs.next();
            return rs.getString("estado");
        }catch(IOException | SQLException ex){
            return "Estado não encontrado.";
        }
    }
    
    private void comboEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEstadosActionPerformed

        textEstado.setText(comboEstados.getSelectedItem().toString());
        comboEstados.setVisible(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_comboEstadosActionPerformed

    public void preencheDatas(){
        Date data = new Date(System.currentTimeMillis());
        textDataHoje.setText(String.valueOf(data));
        
        SimpleDateFormat formatado = new SimpleDateFormat("dd/MM/yyyy");
        String novaData = formatado.format(data);
//        textDataNascimento.setText(novaData);
        textDataAlteracao.setText(novaData);
        textDataAlteracao.setEnabled(false);

    }
    private void btEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEstadosActionPerformed
        comboEstados.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btEstadosActionPerformed

    private void radioNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNomeActionPerformed
        selecao = 1; // Pesquisa por nome.
        textBusca.setText("");
        textBusca.requestFocus();

        // TODO add your handling code here:
    }//GEN-LAST:event_radioNomeActionPerformed

    private void radioCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCargoActionPerformed
        selecao = 2; // Pesquisa por cargo.
        textBusca.setText("");
        textBusca.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_radioCargoActionPerformed

    private void textNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNumeroKeyTyped
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_textNumeroKeyTyped

    private void btIncluiTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluiTelefoneActionPerformed
        Telefones telefone = new Telefones();
        telefone.preencheTabelaTelefones(tabelaTelefones, textTelefone);
        textTelefone.setText("");
        textTelefone.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_btIncluiTelefoneActionPerformed

    private void btExcluiTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluiTelefoneActionPerformed
        Telefones telefone = new Telefones();
        telefone.retiraTelefoneTabela(tabelaTelefones, tabelaTelefones.getSelectedRow());
        textTelefone.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_btExcluiTelefoneActionPerformed

    private void btVerCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerCargoActionPerformed
        comboCargo.setVisible(true);
        
// TODO add your handling code here:
    }//GEN-LAST:event_btVerCargoActionPerformed

    private void btVerTipoPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerTipoPagamentoActionPerformed
        comboTipoPagamento.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btVerTipoPagamentoActionPerformed

    private void comboCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCargoActionPerformed
        textCargo.setText(String.valueOf(comboCargo.getSelectedItem()));
        comboCargo.setVisible(false);
        
// TODO add your handling code here:
    }//GEN-LAST:event_comboCargoActionPerformed

    private void comboTipoPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoPagamentoActionPerformed
        textTipoPagamento.setText(String.valueOf(comboTipoPagamento.getSelectedItem()));
        comboTipoPagamento.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_comboTipoPagamentoActionPerformed

    private void textTelefoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTelefoneKeyTyped
        metodo = new Metodos();
        metodo.somenteNumeros(evt);
    }//GEN-LAST:event_textTelefoneKeyTyped

    private void textTelefoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTelefoneKeyReleased
        metodo = new Metodos();
//        metodo.limitaQuantTelefone(textTelefone.getText());
        textTelefone.setText(metodo.limitaQuantTelefone(textTelefone.getText()));
// TODO add your handling code here:
    }//GEN-LAST:event_textTelefoneKeyReleased

    private void textDataNascimentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDataNascimentoKeyTyped
        metodo = new Metodos();
        metodo.somenteNumerosData(evt);
        metodo.preencheBarraData(textDataNascimento);
        
// TODO add your handling code here:
    }//GEN-LAST:event_textDataNascimentoKeyTyped

    private void textDataAdmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDataAdmKeyTyped
        metodo = new Metodos();
        metodo.preencheBarraData(textDataAdm);
        // TODO add your handling code here:
    }//GEN-LAST:event_textDataAdmKeyTyped

    private void textDataSaidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDataSaidaKeyTyped
        metodo = new Metodos();
        metodo.preencheBarraData(textDataSaida);
        // TODO add your handling code here:
    }//GEN-LAST:event_textDataSaidaKeyTyped

    private void textHorarioEntradaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textHorarioEntradaKeyTyped
        metodo = new Metodos();
        metodo.preenchePontosHora(textHorarioEntrada);
        // TODO add your handling code here:
    }//GEN-LAST:event_textHorarioEntradaKeyTyped

    private void textHorarioSaidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textHorarioSaidaKeyTyped
        metodo = new Metodos();
        metodo.preenchePontosHora(textHorarioSaida);
        // TODO add your handling code here:
    }//GEN-LAST:event_textHorarioSaidaKeyTyped

    public void preencheComboTipoPagamento(){
        TipoPagamento tipoPagamento = new TipoPagamento();
        tipoPagamento.preencheComboPagamento(comboTipoPagamento);
        comboTipoPagamento.setVisible(false);
    }
    
    public void preencheComboCargo(){
        Cargos cargo = new Cargos();
        cargo.preencheComboCargos(comboCargo);
        comboCargo.setVisible(false);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEstados;
    private javax.swing.JButton btExcluiTelefone;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btIncluiTelefone;
    private javax.swing.JButton btIncluir;
    private javax.swing.JButton btVerCargo;
    private javax.swing.JButton btVerTipoPagamento;
    private javax.swing.JComboBox comboCargo;
    private javax.swing.JComboBox comboEstados;
    private javax.swing.JComboBox comboTipoPagamento;
    private javax.swing.ButtonGroup grupoBotao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelBairro;
    private javax.swing.JLabel labelBusca;
    private javax.swing.JLabel labelCargo;
    private javax.swing.JLabel labelCidade;
    private javax.swing.JLabel labelCodFuncionario;
    private javax.swing.JLabel labelComplemento;
    private javax.swing.JLabel labelDataAdm;
    private javax.swing.JLabel labelDataAlteracao;
    private javax.swing.JLabel labelDataNascimento;
    private javax.swing.JLabel labelDataSaida;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelEntrada;
    private javax.swing.JLabel labelEstado;
    private javax.swing.JLabel labelMensagem;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelNumero;
    private javax.swing.JLabel labelObservacoes;
    private javax.swing.JLabel labelSaida;
    private javax.swing.JLabel labelTelefone;
    private javax.swing.JLabel labelTipoPagamento;
    private javax.swing.JLabel labelTitCodFuncionario;
    private javax.swing.JLabel labelValorPagamento;
    private javax.swing.JPanel panelBotoes;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JRadioButton radioCargo;
    private javax.swing.JRadioButton radioNome;
    private javax.swing.JPanel tabPessoal;
    private javax.swing.JPanel tabProfissional;
    private javax.swing.JTable tabelaFuncionario;
    private javax.swing.JTable tabelaTelefones;
    private javax.swing.JTextField textBairro;
    private javax.swing.JTextField textBusca;
    private javax.swing.JTextField textCargo;
    private javax.swing.JTextField textCidade;
    private javax.swing.JTextField textComplemento;
    private javax.swing.JFormattedTextField textDataAdm;
    private javax.swing.JTextField textDataAlteracao;
    private javax.swing.JTextField textDataHoje;
    private javax.swing.JTextField textDataNascimento;
    private javax.swing.JTextField textDataSaida;
    private javax.swing.JTextField textEndereco;
    private javax.swing.JTextField textEstado;
    private javax.swing.JTextField textHorarioEntrada;
    private javax.swing.JTextField textHorarioSaida;
    private javax.swing.JTextField textIdFuncionario;
    private javax.swing.JTextField textNome;
    private javax.swing.JTextField textNumero;
    private javax.swing.JTextArea textObservacoes;
    private javax.swing.JTextField textTelefone;
    private javax.swing.JTextField textTipoPagamento;
    private javax.swing.JTextField textValorPagamento;
    // End of variables declaration//GEN-END:variables
}
